name: Production - Deploy

on:
  workflow_dispatch:
    tags:
      - "v*.*.*"

env:
  PROJECT: curriculum-vitae
  ENV: production
  AWS_REGION: ap-southeast-1 # set this to your preferred AWS region, e.g. us-west-1

jobs:
  deploy:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Copy env config
        env:
          VERSION: ${{ github.ref_name }}
        run: |
          cp ./src/.env.production ./src/.env
          echo VERSION=$VERSION >> ./src/.env

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install dependencies
        run: docker-compose -f environments/ci.yml run install-dependencies

      - name: Build nuxt
        run: docker-compose -f environments/ci.yml run build

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.ref_name }}-${{ env.ENV }}
        run: |
          REGISTRY=$ECR_REGISTRY IMAGE_TAG=$IMAGE_TAG docker-compose -f ./environments/build.yml build --force-rm --platform linux/arm64
          REGISTRY=$ECR_REGISTRY IMAGE_TAG=$IMAGE_TAG docker-compose -f ./environments/build.yml push

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 0.12.31

      - name: Terraform init
        working-directory: ./provision/production
        env:
          STATE: ${{ env.PROJECT }}/${{ env.ENV }}/terraform.tfstate
        run: terraform init -backend-config "key=$STATE" -force-copy -input=false

      - name: Terraform plan
        working-directory: ./provision/production
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          VERSION: ${{ github.ref_name }}
        run: terraform plan -var="app_version=$VERSION" -var="registry=$ECR_REGISTRY"

      - name: Terraform apply
        working-directory: ./provision/production
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          VERSION: ${{ github.ref_name }}
        run: terraform apply -auto-approve -var="app_version=$VERSION" -var="registry=$ECR_REGISTRY"
